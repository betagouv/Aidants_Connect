# Generated by Django 4.2.12 on 2024-05-13 12:34

from django.db import migrations

import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ('aidants_connect_common', '0013_formation_state_formationattendant_state'),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name='formationattendant',
            name='check_attendants_count',
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='formationattendant',
            trigger=pgtrigger.compiler.Trigger(name='check_attendants_count', sql=pgtrigger.compiler.UpsertTriggerSql(declare='DECLARE attendants_count INTEGER; max_attendants_count INTEGER;', func="-- prevent concurrent inserts from multiple transactions\nLOCK TABLE aidants_connect_common_formationattendant IN EXCLUSIVE MODE;\n\nSELECT INTO attendants_count COUNT(*)\nFROM aidants_connect_common_formationattendant\nWHERE formation_id = NEW.formation_id\nAND state != 3;\n\nSELECT max_attendants INTO max_attendants_count\nFROM aidants_connect_common_formation\nWHERE id = NEW.formation_id;\n\nIF attendants_count >= max_attendants_count THEN\n    RAISE EXCEPTION 'Formation is already full.' USING ERRCODE = 'check_violation';\nEND IF;\n\nRETURN NEW;", hash='a1c42d5acb4527b926b057229b5beb0ed2fe7585', operation='INSERT', pgid='pgtrigger_check_attendants_count_de7ba', table='aidants_connect_common_formationattendant', when='BEFORE')),
        ),
    ]
